name: Elixir and JavaScript CI

on: [pull_request]

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      # cache the ASDF directory, using the values from .tool-versions
      - name: ASDF cache
        uses: actions/cache@v2
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
        id: asdf-cache
      # only run `asdf install` if we didn't hit the cache
      - uses: asdf-vm/actions/install@v1
        if: steps.asdf-cache.outputs.cache-hit != 'true'
      # if we did hit the cache, set up the environment
      - name: Setup ASDF environment
        run: |
          echo "ASDF_DIR=$HOME/.asdf" >> $GITHUB_ENV
          echo "ASDF_DATA_DIR=$HOME/.asdf" >> $GITHUB_ENV
        if: steps.asdf-cache.outputs.cache-hit == 'true'
      - name: Reshim ASDF
        run: |
          echo "$ASDF_DIR/bin" >> $GITHUB_PATH
          echo "$ASDF_DIR/shims" >> $GITHUB_PATH
          $ASDF_DIR/bin/asdf reshim
      - name: Setup Rebar/Hex if necessary
        if: steps.asdf-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
      - name: <elixir> Restore dependencies cache
        id: elixir-cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - name: <elixir> Install dependencies (if needed)
        if: steps.elixir-cache.outputs.cache-hit != 'true'
        run: mix deps.get
      - name: <node> Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: "assets/node_modules"
          key: ${{ runner.os }}-nodejs-${{ hashFiles('assets/package-lock.json') }}
        id: node-cache
      - name: <node> Install dependencies (if needed)
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm install --prefix assets
      - name: Compile (warnings as errors)
        run: mix compile --force --warnings-as-errors
      - name: Check formatting
        run: mix format --check-formatted
      - name: Credo
        run: mix credo --strict
      - name: Security checks
        run: mix sobelow mix sobelow --skip --exit
      - name: Run tests
        run: mix test --cover
      - name: JS checks
        run: npm run check --prefix assets
      - name: JS tests
        run: npm run test --prefix assets
      - name: Save PR information
        run: |
          echo "${{ github.event.pull_request.number }}" > cover/PR_NUMBER
          echo "${{ github.event.pull_request.head.sha }}" > cover/PR_SHA
        if: github.event.pull_request
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: elixir-lcov
          path: cover/
      - uses: mbta/actions/dialyzer@v1
